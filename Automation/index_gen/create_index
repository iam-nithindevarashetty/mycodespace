def create_index(target_cluster=target_cluster,name=None,rate=None,retention=None,idxr_count=None,customer_index_onboard=None):
    index_yaml_load = {}
    for indexVarsPath in customer_index_onboard:
        index_yaml_load.clear()
        index_yaml_load = ruamel.yaml.load(open(indexVarsPath,"r").read(),Loader=ruamel.yaml.RoundTripLoader)
        logger.debug("Calculation stanza for index_name={} ingestion_rate={} retention={} idx_count={}".format(name,rate,retention,idxr_count))
        stanza_dict = {}
        misc_dict = {}
        stanza_dict['name'] = str(name)
        misc_dict['frozenTimePeriodInSecs'] = int(retention) * 86400
        misc_dict['maxTotalDataSizeMB'] = int((float(rate) * int(retention) * 1.3) / int(idxr_count))
        if misc_dict['maxTotalDataSizeMB'] < 1000:
            logger.info("The index size is lessthan 1G , I'm resetting this")
            misc_dict['maxTotalDataSizeMB'] = 1000
        misc_dict['maxHotSpanSecs'] = 604800
        if name.startswith('stg_'):
            stanza_dict['maxDataSize'] = 'auto'
            stanza_dict['maxHotBuckets'] = 1
            misc_dict['maxTotalDataSizeMB'] = 1000
            misc_dict['maxWarmDBCount'] = 1
            misc_dict['frozenTimePeriodInSecs'] = 7 * 86400
        else:
            if int(rate) > 50000:
                stanza_dict['maxDataSize'] = 'auto_high_volume'
            else:
                stanza_dict['maxDataSize'] = 'auto'
            stanza_dict['maxHotBuckets'] = hotbucket_warmdbcount(bucket='hot',mode=stanza_dict['maxDataSize'],datasize=misc_dict['maxTotalDataSizeMB'])
            misc_dict['maxWarmDBCount'] = hotbucket_warmdbcount(bucket='warm',mode=stanza_dict['maxDataSize'],datasize=misc_dict['maxTotalDataSizeMB'])
        logger.debug("Calling stanza build for index_name={} ingestion_rate={} retention={} idx_count={}".format(name,rate,retention,idxr_count))
        create_stanza(target_cluster=target_cluster,outer=stanza_dict,inner=misc_dict,index_yaml_load=index_yaml_load)
        stream = open(indexVarsPath,"w")
        ruamel.yaml.dump(index_yaml_load,stream,Dumper=ruamel.yaml.RoundTripDumper,width=500000000000000000)
        stream.close()